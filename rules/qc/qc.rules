STAR_PICARD_QCDIR = join(QUANT_INTERIM, 'star', 'qc', 'picard')
CR_PICARD_QCDIR = join(QUANT_INTERIM, 'cellranger', 'qc', 'picard')


rule create_ribo_bed:
    input:
        gtf = join(REF_DIR, 'genes', 'genes.gtf')
    output:
        temp('rrna.bed')
    singularity:
        'docker://' + config['docker']['ucsc-scripts']
    shell:
        """
        grep -i rrna {input.gtf} > rrna.gtf
        gtfToGenePred rrna.gtf rrna.genepred
        genePredToBed rrna.genepred {output}
        rm rrna.gtf rrna.genepred
        """

rule create_ribo_intervals:
    input:
        bed = 'rrna.bed',
        genome = join(REF_DIR, 'fasta', 'genome.dict')
    output:
        temp('rrna.intervals')
    singularity:
        'docker://' + config['docker']['picard_gatk']
    shell:
        'gatk BedToIntervalList '
        '-I {input.bed} '
        '-O {output} '
        '-SD {input.genome} '

rule picard_rnametrics_star:
    input:
        bam = join(STAR_INTERIM, '{sample}', 'Aligned.sortedByCoord.out.bam'),
        ref_flat = join(REF_DIR, 'genes', 'genes.refflat.gz'),
        rrna = rules.create_ribo_intervals.output
    output:
        metrics = join(STAR_PICARD_QCDIR, '{sample}.rnaseq.metrics')
    log:
        metrics = 'logs/{sample}/picard_star/{sample}.rnaseq.metrics',
        log_out = 'logs/{sample}/picard_star/{sample}.log'
    params:
        java_opt='-Xms4g -Xmx4g'
    threads:
        2
    singularity:
        'docker://' + config['docker']['picard_gatk']
    shell:
        """
        picard CollectRnaSeqMetrics {params.java_opt} INPUT={input.bam} OUTPUT={output.metrics} REF_FLAT={input.ref_flat} STRAND=SECOND_READ_TRANSCRIPTION_STRAND ASSUME_SORTED=TRUE RIBOSOMAL_INTERVALS={input.rrna} VALIDATION_STRINGENCY=SILENT 2> {log.log_out}
        cp {output.metrics} {log.metrics}
        """

rule picard_rnametrics_cellranger:
    input:
        bam = join(CR_INTERIM, '{sample}', 'outs', 'possorted_genome_bam.bam'),
        ref_flat = join(REF_DIR, 'genes', 'genes.refflat.gz'),
        rrna = rules.create_ribo_intervals.output
    output:
        metrics = join(CR_PICARD_QCDIR, '{sample}.rnaseq.metrics')
    log:
        metrics = 'logs/{sample}/picard_cellranger/{sample}.rnaseq.metrics',
        log_out = 'logs/{sample}/picard_cellranger/{sample}.log'
    params:
        java_opt='-Xms4g -Xmx4g'
    threads:
        2
    singularity:
        'docker://' + config['docker']['picard_gatk']
    shell:
        """
        picard CollectRnaSeqMetrics {params.java_opt} INPUT={input.bam} OUTPUT={output.metrics} REF_FLAT={input.ref_flat} STRAND=SECOND_READ_TRANSCRIPTION_STRAND ASSUME_SORTED=TRUE RIBOSOMAL_INTERVALS={input.rrna} VALIDATION_STRINGENCY=SILENT 2> {log.log_out}
        cp {output.metrics} {log.metrics}
        """

