#-*- mode:snakemake -*-
AVN_EXT = join(EXT_DIR, 'alevin')
AVN_CONFIG = config.get('alevin', {})
AVN_DOCKER = AVN_CONFIG.get('docker', 'docker://flatberg/alevin:dev0.12')

include:
    'ensembl.db'
include:
    'gencode.db'
include:
    '10xgenomics.db'


rule alevin_transcriptome:
    input:
        gtf = join(EXT_DIR, '{reference_db}', 'genes', 'genes.gtf'),
        genome = join(EXT_DIR, '{reference_db}', 'fasta', 'genome.fa')
    output:
        join(EXT_DIR, '{reference_db}', 'fasta', 'transcriptome.fa')
    singularity:
        'docker://flatberg/alevin:dev0.12'
    shell:
        'gffread -w {output} -g {input.genome} {input.gtf}'
        
rule alevin_index:
    input:
        transcriptome = join(EXT_DIR, '{reference_db}', 'fasta', 'transcriptome.fa')
    output:
        join(EXT_DIR, '{reference_db}', 'salmon', 'refInfo.json')
    params:
        out = join(EXT_DIR, '{reference_db}', 'salmon')
    threads:
        16
    singularity:
        'docker://flatberg/alevin:dev0.12'
    shell:
        'salmon index '
        '--perfectHash '
        '--threads {threads} '
        '--index {params.out} '
        '--transcripts {input.transcriptome}'
        
rule alevin_tgmap:
    input:
        gtf = join(EXT_DIR, '{reference_db}', 'genes', 'genes.gtf')
    output:
        join(EXT_DIR, '{reference_db}', 'genes', 'txp2gene.tsv')
    singularity:
        'docker://flatberg/alevin:dev0.12'
    shell:
        """
        bioawk -c gff '$feature=="transcript" {{print $group}}' {input.gtf} | awk -F ' ' '{{print substr($6,2,length($6)-3) "\\t" substr($2,2,length($2)-3)}}' > {output}
        """
